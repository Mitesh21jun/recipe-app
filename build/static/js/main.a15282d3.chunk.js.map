{"version":3,"sources":["recipe.module.css","Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Recipe","title","calories","image","ingredients","className","style","width","boxShadow","src","alt","map","ingredient","text","App","useState","recipes","setRecipes","search","setSearch","Math","floor","random","query","setQuery","URL","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,8B,sIC4BjDC,EAxBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxC,OACE,qBAAKC,UAAU,gDAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,GAAf,SACE,sBAAKA,UAAU,YAAYC,MAAO,CAACC,MAAQ,QAASC,UAAW,gCAA/D,UACA,qBAAKC,IAAKN,EAAOE,UAAU,mBAAmBK,IAAI,QAEhD,sBAAKL,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BJ,IAC5B,oBAAGI,UAAU,OAAb,uBAA+BH,KAE/B,oBAAIG,UAAU,cAAd,SACGD,EAAYO,KAAI,SAACC,GAAD,OACf,oBAAIP,UAAU,YAAd,SAA2BO,EAAWC,yBC8CzCC,EA9DH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAASK,KAAKC,MAAoB,IAAdD,KAAKE,WAPnC,mBAOTC,EAPS,KAOFC,EAPE,KASVC,EAAG,0CAAsCF,EAAtC,mBAPM,WAON,oBANO,oCAShBG,qBAAU,WACRC,MACC,CAACJ,IAGJ,IAAMI,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAMJ,GADZ,cACXK,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBf,EAAWe,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MACjBd,EAAU,IALO,2CAAH,qDAiBhB,OACE,qBAAKd,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACA,uBAAM+B,SARQ,SAACC,GACjBA,EAAEC,iBACFd,EAASN,IAMoBb,UAAU,cAArC,UACE,uBACEkC,KAAK,OACLlC,UAAU,aACVmC,MAAOtB,EACPuB,SAjBa,SAACJ,GACpBlB,EAAUkB,EAAEK,OAAOF,UAkBf,wBAAQD,KAAK,SAASlC,UAAU,gBAAhC,uBAIF,qBAAKA,UAAU,kBAAf,SACGW,EAAQL,KAAI,SAACgC,GAAD,OACX,cAAC,EAAD,CAEE1C,MAAO0C,EAAOA,OAAOC,MACrB1C,SAAUyC,EAAOA,OAAOzC,SACxBC,MAAOwC,EAAOA,OAAOxC,MACrBC,YAAauC,EAAOA,OAAOvC,aAJtBuC,EAAOA,OAAOC,kBC1ChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a15282d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1zsA7\",\"recipeimage\":\"recipe_recipeimage__Cg3Rq\"};","import React from \"react\";\r\nimport style from \"./recipe.module.css\";\r\n// import { Card } from \"react-bootstrap\";\r\n// import { Button } from \"react-bootstrap\";\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n  return (\r\n    <div className=\"col-lg-4 col-md-4 col-sm-6 pb-2 d-inline-flex\">\r\n      <div className=\"row\">\r\n        <div className=\"\">\r\n          <div className=\"card pr-2\" style={{width : \"20rem\", boxShadow: '0px 3px 10px rgb(71, 71, 71)'}}>\r\n          <img src={image} className=\"card-img-top m-1\" alt=\"...\"/>\r\n\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{title}</h5>\r\n              <p className=\"lead\">Calories :{calories}</p>\r\n\r\n              <ul className=\"list-styled\">\r\n                {ingredients.map((ingredient) => (\r\n                  <li className=\"text-wrap\">{ingredient.text}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Recipe from \"./Recipe\";\nconst App = () => {\n  //variables\n  const APP_ID = \"6db2d6c2\";\n  const APP_KEY = \"5fa585ec7f0225d8f1a5d8097404307f\";\n  //useStates\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(Math.floor(Math.random()*100));\n\n  const URL = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  //useEffects\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  //methods\n  const getRecipes = async () => {\n    const response = await fetch(URL);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n    setSearch(\"\");\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          type=\"text\"\n          className=\"search-bar\"\n          value={search}\n          onChange={updateSearch}\n        />\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n      <div className=\"container-fluid\">\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div></div>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}